[project]

name = "pytest-modern"
version = "0.4.1"
authors = [{ name = "ZhengYu, Xu", email = "zen-xu@outlook.com" }]
description = "A more modern pytest"
readme = "README.md"
requires-python = ">=3.9,<4"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
    "Framework :: Pytest",
]
dependencies = ["pytest>=8", "rich>=10"]

[project.optional-dependencies]
timeout = ["pytest-timeout>=2"]
rerun = ["pytest-rerunfailures>=15"]

[project.entry-points.pytest11]
pytest-modern = "pytest_modern.plugin"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
extend-exclude = ["docs/*"]
fix = true
line-length = 88
target-version = "py39"

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TC",  # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "B904",   # use 'raise ... from err'
    "B905",   # use explicit 'strict=' parameter with 'zip()'
    "N818",   # Exception name should be named with an Error suffix
    "PGH003", # blanket-type-ignore
]
unfixable = [
    "ERA", # do not auto remove commented out code
]

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["pytest_modern"]
lines-after-imports = 2
lines-between-types = 1

[tool.pytest.ini_options]
timeout = 2
reruns = 3
only_rerun = ["ChoiceError"]
